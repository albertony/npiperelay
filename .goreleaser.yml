before:
  hooks:
    - 'go install github.com/josephspurrier/goversioninfo/cmd/goversioninfo@latest'
    - 'goversioninfo
      -platform-specific
      -ver-major="{{ .Major }}" -product-ver-major="{{ .Major }}"
      -ver-minor="{{ .Minor }}" -product-ver-minor="{{ .Minor }}"
      -ver-patch="{{ .Patch }}" -product-ver-patch="{{ .Patch }}"
      -file-version="{{ .Version }}+{{ .FullCommit }}" -product-version="{{ .Version }}+{{ .FullCommit }}"'

builds:
- binary: npiperelay
  goos:
    - windows
  goarch:
    - 386
    - amd64

archives:
  # Publish archived binaries (.zip).
  # Use .zip format for Windows, instead of the default .tar.gz,
  # and one archive for each arch (386 and amd64):
  #    npiperelay_windows_386.zip
  #    npiperelay_windows_amd64.zip
  # Archives will contain the binary with name npiperelay.exe.
  # Note: Using same name and content as the original upstream release,
  # so they can be used as drop-in replacements.
  - id: zip
    name_template: "{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}"
    format_overrides:
      - goos: windows
        format: zip
  # Publish raw binaries (.exe).
  # One for each arch (386 and amd64):
  #    npiperelay_windows_386.exe
  #    npiperelay_windows_amd64.exe
  # Redundant, since the binaries are already published in the archives, but
  # these are convenient for direct download, while we still want the archives
  # for backwards compatibility with the original upstream release.
  # Note that the binary names are different from those included in the
  # archives, which are npiperelay.exe in both cases, to get unique name
  # for the two arch variants.
  - id: binary
    format: binary
    name_template: "{{ .Binary }}_{{ .Os }}_{{ .Arch }}"

checksum:
  name_template: "{{ .ProjectName }}_checksums.txt"
  # OLD: Before publishing raw binaries the following would include the checksum
  # of the raw binaries (.exe) included in the archives (.zip). When publishing
  # the raw binaries their checksums will already be included by default.
  #extra_files:
  #  - glob: "./dist/{{ .ProjectName }}_windows_386/{{ .ProjectName }}.exe"
  #    name_template: "{{ .ProjectName }}_windows_386/{{ .ProjectName }}.exe"
  #  - glob: "./dist/{{ .ProjectName }}_windows_amd64_v1/{{ .ProjectName }}.exe"
  #    name_template: "{{ .ProjectName }}_windows_amd64_v1/{{ .ProjectName }}.exe"

release:
  draft: true
  replace_existing_draft: true
  header: |
    This is a release of my forked project, from branch [fork](https://github.com/albertony/npiperelay/tree/fork). See below for full changelog, listing all commits since previous fork release. The primary asset of the release is a direct download link for a ready-to-use build of the application's single executable, as well as an alternative .zip archive containing the same executable. It is built with Go version {{ .Env.GOVERSION }}.

    <details>
      <summary>About this fork</summary>
    <p></p>

    This release is from my fork of [jstarks/npiperelay](https://github.com/jstarks/npiperelay), adding some smaller improvements on top of upstream release [v0.1.0](https://github.com/jstarks/npiperelay/releases/tag/v0.1.0). The changes are conservative; primary concern is to keep the code updated and secure, considering upstream has not been updated since this first release back in mid 2020. See previous release notes for fork releases starting with [v1.0.0](https://github.com/albertony/npiperelay/releases/tag/v1.0.0) to learn about all changes.
    </details>

    <details>
      <summary>Checksums</summary>
    <p></p>

    The SHA-256 checksums of the binary release assets are published as text file asset `npiperelay_checksums.txt`. Note that the .zip asset for the amd64 (x64/64-bit) and 386 (x86/32-bit) architectures both contain a single executable with name `npiperelay.exe`, and it is identical to the .exe asset with same name as the .zip asset, i.e. `npiperelay_windows_386.exe` and `npiperelay_windows_amd64.exe`, and should therefore have the same checksum.
    <!--

    These are the SHA-256 checksums of all binary release assets, as published in `npiperelay_checksums.txt`:
    ```
    *** TODO: Copy content of npiperelay_checksums.txt here! ***
    ```
    -->
    </details>

    <details>
      <summary>Antivirus</summary>
    <p></p>

    If your local antivirus treats the downloaded archive or executable as suspicious or malicious, you should try to report it as a false positive, e.g. to Symantec on [symsubmit.symantec.com](https://symsubmit.symantec.com) (select "Clean software incorrectly detected"). At the time of the release, no security vendors on [VirusTotal](https://www.virustotal.com) flagged the asset download urls as malicious, but some very few (well below 10%) did flag the zip archive and executable files themselves (see report for each of the assets in expandable section below). The implementation is less than 300 lines of go code, plus a single, commonly used, third party dependency. The source code is automatically run through vulnerability analysis, using Go's [govulncheck](https://pkg.go.dev/golang.org/x/vuln/cmd/govulncheck) and GitHub's [CodeQL](https://codeql.github.com), and a long list of code quality checks (linters), using [golangci-lint](https://golangci-lint.run/) (see [.golangci.yml](https://github.com/albertony/npiperelay/blob/fork/.golangci.yml) for the complete list). If you do worry, you are free to analyse the code yourself, and you can also [build](https://github.com/albertony/npiperelay#building) the executable locally from source.
    <!--

    *** TODO: Analyze asset urls and files, and update report links below! ***
    [VirusTotal](https://www.virustotal.com/) scan reports for release assets:
    - Asset download URLs:
      - npiperelay_windows_386.zip: [Report](https://www.virustotal.com/gui/url/??)
      - npiperelay_windows_386.exe: [Report](https://www.virustotal.com/gui/url/??)
      - npiperelay_windows_amd64.zip: [Report](https://www.virustotal.com/gui/url/??)
      - npiperelay_windows_amd64.exe: [Report](https://www.virustotal.com/gui/url/??)
    - Asset files:
      - npiperelay_windows_386.zip: [Report](https://www.virustotal.com/gui/file/??)
      - npiperelay_windows_386.exe and npiperelay.exe from npiperelay_windows_386.zip: [Report](https://www.virustotal.com/gui/file/??)
      - npiperelay_windows_amd64.zip: [Report](https://www.virustotal.com/gui/file/??)
      - npiperelay_windows_amd64.exe and npiperelay.exe from npiperelay_windows_amd64.zip: [Report](https://www.virustotal.com/gui/file/??)
    -->
    </details>

    <details>
      <summary>Changelog</summary>
    <p></p>

    Commits since previous fork release:
    * TODO...
    <!--
    *** TODO: Move goreleaser autogenerated changelog in here! ***
    -->

    (Application executable in release assets built with Go version {{ .Env.GOVERSION }}).
    </details>
